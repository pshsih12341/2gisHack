
services:
    
  db:
    container_name: "db_without_traefik"
    image: "postgres:17"
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      #Здесь возможно будет лучше поменять на "5433:${DB_PORT}", так как на сервере может быть 5432 уже быть занят другой POSTGRES
      - "${DB_PORT}:${DB_PORT}" 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pg_project:/var/lib/postgresql/data
    
  backend:
    container_name: "backend_without_traefik"
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./backend/src/.env
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    
  frontend:
    container_name: "frontend_without_traefik"
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "3000:3000"

volumes:
  pg_project:
